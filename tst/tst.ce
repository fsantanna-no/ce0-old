type Bool {
    False: ()
    True:  ()
}

type rec Nat {
    Succ: Nat
}

var x: Nat = Succ($Nat)
var y: Nat = Succ($Nat)

var i: Nat = Succ($Nat)
var j: Nat = i  -- tx
call output(i)  -- erro

-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

func add: (Nat,Nat&) -> Nat {
    var x: Nat  = arg.1
    var y: Nat& = arg.2
    if y.$Nat? {
        return x
    } else {
        return Succ(add(x,y.Succ!))
    }
}

var z: Nat = add(x,&y)
call output(&z)

-------------------------------------------------------------------------------

--set x = add(x,&y)
--call output(&x)

-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
